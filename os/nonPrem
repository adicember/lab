#include <stdio.h>
void generateGanttChart(int p[], int n, int wt[], int bt[])
{
    printf("\nGantt Chart:\n");
    printf("-----------\n");
    int i;
    // Print the process numbers
    for (i = 0; i < n; i++)
    {
        printf("| P%d ", p[i]);
    }
    printf("|\n");
    // Print the timeline
    int currentTime = 0;
    for (i = 0; i < n; i++)
    {
        printf("%d ", currentTime);
        currentTime += bt[i];
    }
    printf("%d\n", currentTime);
}
int main()
{
    int bt[20], p[20], wt[20], tat[20], pr[20], i, j, n, total = 0, pos, temp;
    float avg_wt, avg_tat;
    printf("Enter the Total Number of Processes: ");
    scanf("%d", &n);
    printf("\nEnter the Burst Time and Priority for each process:\n");
    for (i = 0; i < n; i++)
    {
        printf("P[%d] Burst Time: ", i + 1);
        scanf("%d", &bt[i]);
        printf("P[%d] Priority: ", i + 1);
        scanf("%d", &pr[i]);
        p[i] = i + 1; // Contains process number
    }
    // Sorting burst time, priority, and process number in ascending order using selection sort
    for (i = 0; i < n; i++)
    {
        pos = i;
        for (j = i + 1; j < n; j++)
        {
            if (pr[j] < pr[pos])
                pos = j;
        }
        temp = pr[i];
        pr[i] = pr[pos];
        pr[pos] = temp;
        temp = bt[i];
        bt[i] = bt[pos];
        bt[pos] = temp;
        temp = p[i];
        p[i] = p[pos];
        p[pos] = temp;
    }
    wt[0] = 0; // Waiting time for the first process is zero
    // Calculate waiting time
    for (i = 1; i < n; i++)
    {
        wt[i] = 0;
        for (j = 0; j < i; j++)
            wt[i] += bt[j];
        total += wt[i];
    }
    avg_wt = total / n; // Average waiting time
    total = 0;
    printf("\n**** Non Preemptive Priority Scheduling ****\n");
    printf("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (i = 0; i < n; i++)
    {
        tat[i] = bt[i] + wt[i]; // Calculate turnaround time
        total += tat[i];
        printf("P[%d]\t%d\t\t%d\t\t%d\n", p[i], bt[i], wt[i], tat[i]);
    }
    avg_tat = total / n; // Average turnaround time
    printf("\nAverage Waiting Time: %f", avg_wt);
    printf("\nAverage Turnaround Time: %f\n", avg_tat);
    generateGanttChart(p, n, wt, bt);
    printf("\nName: Aditika Singh\nSymbol No: 25957");
    return 0;
}
